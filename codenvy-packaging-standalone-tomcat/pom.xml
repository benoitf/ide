<?xml version="1.0" encoding="UTF-8"?>
<!--

    CODENVY CONFIDENTIAL
    __________________

    [2012] - [2013] Codenvy, S.A.
    All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>exo-ide-parent</artifactId>
        <groupId>org.exoplatform.ide</groupId>
        <version>2.12.3-SNAPSHOT</version>
    </parent>
    <artifactId>codenvy-packaging-standalone-tomcat</artifactId>
    <packaging>pom</packaging>
    <name>Codenvy IDE :: Assemblies Tomcat</name>
    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codenvy.factory</groupId>
            <artifactId>codenvy-factory-packaging-war</artifactId>
            <version>${codenvy.factory.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.codenvy.organization</groupId>
            <artifactId>codenvy-organization-packaging-api-war</artifactId>
            <version>${codenvy.organization.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-java-sdk</artifactId>
            <version>${appengine.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>codenvy-application-war</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>codenvy-packaging-platform-api-war</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-codeassistant-storage</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-git-server</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.exoplatform.ide</groupId>
            <artifactId>exo-ide-maven</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Prepare Tomcat</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <unwar dest="${project.build.directory}/packager-conf/zip/tomcat-ide" src="${project.build.directory}/packager-conf/zip/tomcat.zip">
                                    <patternset>
                                        <exclude name="**/ROOT/**" />
                                        <exclude name="**/docs/**" />
                                        <exclude name="**/examples/**" />
                                        <exclude name="**/host-manager/**" />
                                        <exclude name="**/manager/**" />
                                    </patternset>
                                </unwar>
                                <copy overwrite="true" todir="${project.build.directory}/tomcat-ide">
                                    <fileset dir="${project.build.directory}/packager-conf/zip/tomcat-ide/apache-tomcat-${tomcat.version}" />
                                </copy>
                                <copy overwrite="true" todir="${project.build.directory}/tomcat-ide">
                                    <fileset dir="${basedir}/src/main/resources/tomcat" />
                                </copy>
                                <chmod dir="${project.build.directory}/tomcat-ide/bin" includes="**/*.sh" perm="+x" />
                                <move file="${project.build.directory}/packager-conf/jar/log4j-over-slf4j.jar" tofile="${project.build.directory}/tomcat-ide/lib/log4j-over-slf4j.jar" />
                                <move file="${project.build.directory}/packager-conf/jar/logback-core.jar" tofile="${project.build.directory}/tomcat-ide/lib/logback-core.jar" />
                                <move file="${project.build.directory}/packager-conf/jar/logback-classic.jar" tofile="${project.build.directory}/tomcat-ide/lib/logback-classic.jar" />
                                <move file="${project.build.directory}/packager-conf/jar/slf4j-api.jar" tofile="${project.build.directory}/tomcat-ide/lib/slf4j-api.jar" />
                                <move file="${project.build.directory}/packager-conf/jar/jul-to-slf4j.jar" tofile="${project.build.directory}/tomcat-ide/lib/jul-to-slf4j.jar" />
                                <copy file="${project.build.directory}/packager-conf/war/exo-ide-git-server-${project.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/git.war" />
                                <copy file="${project.build.directory}/packager-conf/war/codenvy-packaging-platform-api-war-${project.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/api.war" />
                                <copy file="${project.build.directory}/packager-conf/war/exo-ide-maven-${project.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/builder.war" />
                                <copy file="${project.build.directory}/packager-conf/war/exo-ide-codeassistant-storage-${project.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/codeassistant-storage.war" />
                                <copy file="${project.build.directory}/packager-conf/war/codenvy-organization-packaging-api-war-${codenvy.organization.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/userdb.war" />
                                <copy file="${project.build.directory}/packager-conf/war/codenvy-factory-packaging-war-${codenvy.factory.version}.war" overwrite="true" tofile="${project.build.directory}/tomcat-ide/webapps/factory.war" />
                                <unzip dest="${project.build.directory}/tomcat-ide" src="${project.build.directory}/ide-codeassistant-lucene-index.zip" />
                                <unzip dest="${project.build.directory}/tomcat-ide" src="${project.build.directory}/packager-conf/appengine/appengine-java-sdk.zip">
                                    <patternset>
                                        <exclude name="**/bin/**" />
                                        <exclude name="**/demos/**" />
                                        <exclude name="**/src/**" />
                                        <exclude name="**/docs/javadoc/**" />
                                        <exclude name="**/docs/remoteapi/**" />
                                        <exclude name="**/docs/testing/**" />
                                        <exclude name="**/docs/tools/**" />
                                        <exclude name="**/docs/javadoc/**" />
                                        <exclude name="**/ABOUT" />
                                        <exclude name="**/COPYING" />
                                        <exclude name="**/README" />
                                        <exclude name="**/README.ORM" />
                                        <exclude name="**/RELEASE_NOTES" />
                                        <exclude name="**/RELEASE_NOTES.ORM" />
                                    </patternset>
                                </unzip>
                                <move file="${project.build.directory}/tomcat-ide/appengine-java-sdk-${appengine.version}" tofile="${project.build.directory}/tomcat-ide/appengine-java-sdk" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <!-- Create the distribution zip and attach it to maven -->
                    <execution>
                        <id>tomcat-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <updateOnly>false</updateOnly>
                            <descriptors>
                                <descriptor>${project.basedir}/src/main/assembly/tomcat-archive.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-clear-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.tomcat</groupId>
                                    <artifactId>tomcat</artifactId>
                                    <type>zip</type>
                                    <version>${tomcat.version}</version>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/packager-conf/zip</outputDirectory>
                                    <destFileName>tomcat.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-war</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>war</includeTypes>
                            <silent>true</silent>
                            <outputDirectory>${project.build.directory}/packager-conf/war</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-logger</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>jar</includeTypes>
                            <stripVersion>true</stripVersion>
                            <silent>true</silent>
                            <outputDirectory>${project.build.directory}/packager-conf/jar/</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-appengine-zip</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <silent>true</silent>
                            <outputDirectory>${project.build.directory}/packager-conf/appengine</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.google.appengine</groupId>
                                    <artifactId>appengine-java-sdk</artifactId>
                                    <version>${appengine.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-lucene-autocomplite-index</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.exoplatform.ide</groupId>
                                    <artifactId>ide-codeassistant-lucene-index</artifactId>
                                    <version>${codenvy.ide-codeassistant-index.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Prepare IDE WAR</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <unwar dest="${project.build.directory}/packager-conf/war/ide" src="${project.build.directory}/packager-conf/war/codenvy-application-war-${project.version}.war" />
                                        <war destfile="${project.build.directory}/tomcat-ide/webapps/ide.war" needxmlfile="false">
                                            <fileset dir="${project.build.directory}/packager-conf/war/ide" />
                                        </war>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
